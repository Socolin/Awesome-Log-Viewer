settings.application.insights.console.name=Console
settings.application.insights.console.description=The Console Log Processor parses logs from the Debug output when debugging .NET projects to extract telemetry data. \
  This allows catching all logs and simplifying debugging of sampling configurations. \
  For non-.NET projects, you can add code to write telemetry as JSON to the console output as done, \
  <a href="https://github.com/microsoft/ApplicationInsights-dotnet/blob/main/BASE/src/Microsoft.ApplicationInsights/Extensibility/Implementation/TelemetryDebugWriter.cs">in the dotnet library</a>, \
  and use this processor.
settings.application.insights.network.name=Network
settings.application.insights.network.description=<p>The Network Log Processor starts an http server to catch the logs.</p>\
  <p>Logs can be redirected to this by setting the environment: <code>APPLICATIONINSIGHTS_CONNECTION_STRING</code></p>\
  <p>The environment variable is automatically added for Java and .NET run configuration. \
  For the other run configuration you need to use a static port and add yourself the environment variable in the run configuration.
settings.application.insights.network.environment.variables.title=Environment Variables
settings.application.insights.network.environment.variables.comment=For Java and .NET run configuration only: those variables are injected \
  when the program starts. The string `<code>${SERVER_PORT}</code>` is replaced with the port of the http server.
settings.application.insights.color.title=Colors

